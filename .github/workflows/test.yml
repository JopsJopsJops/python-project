name: CI Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
        sudo apt-get install -y xvfb

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-qt

    - name: Run safe unit tests only
      run: |
        python -m pytest tests/test_data_manager.py tests/test_import_service.py tests/test_table_helpers.py tests/test_reports.py -v --tb=short

    - name: Run GUI tests with xvfb (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        xvfb-run -a python -m pytest tests/ -v -m "gui" --tb=short

    - name: Skip GUI tests on Windows/macOS
      if: matrix.os != 'ubuntu-latest'
      run: |
        echo "GUI tests skipped on ${{ matrix.os }} - requires display server"

  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install linting tools
      run: |
        pip install flake8 black isort mypy bandit

    - name: Check code formatting with black
      run: |
        black --check expense_tracker_app/ tests/

    - name: Check import sorting with isort
      run: |
        isort --check-only expense_tracker_app/ tests/

    - name: Run flake8
      run: |
        flake8 expense_tracker_app/ tests/ --max-line-length=88 --extend-ignore=E203,W503,F401,F811,F841,W293

    - name: Run mypy type checking
      run: |
        mypy expense_tracker_app/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run bandit security scanner
      run: |
        pip install bandit
        bandit -r expense_tracker_app/ -f html -o security-report.html || true

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.html
        retention-days: 30
